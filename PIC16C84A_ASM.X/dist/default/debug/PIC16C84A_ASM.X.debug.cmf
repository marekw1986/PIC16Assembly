%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta> <reloc>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$build/default/debug/main.o
interruptVect CODE 0 4 4 A 2 1
code CODE 0 E E 79 2 1
resetVect CODE 0 0 0 2 2 1
config CONFIG 4 2007 2007 2 2 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 20-6F 1
RAM A0-EF 1
RAM 110-16F 1
RAM 190-1EF 1
BANK0 20-6F 1
BANK1 A0-EF 1
BANK2 110-16F 1
BANK3 190-1EF 1
CONST 2-3 2
CONST 87-FFF 2
ENTRY 2-3 2
ENTRY 87-FFF 2
IDLOC 2000-2003 2
CODE 2-3 2
CODE 87-FFF 2
SFR0 4-7 1
SFR2 10E-10F 1
SFR3 180-18F 1
COMMON 70-7F 1
EEDATA 2100-21FF 2
STRCODE 2-3 2
STRCODE 87-FFF 2
STRING 2-3 2
STRING 87-FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$build/default/debug/main.o
4 interruptVect CODE >40:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
5 interruptVect CODE >41:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
6 interruptVect CODE >43:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
7 interruptVect CODE >44:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
8 interruptVect CODE >45:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
9 interruptVect CODE >46:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
A interruptVect CODE >47:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
B interruptVect CODE >48:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
C interruptVect CODE >50:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
D interruptVect CODE >51:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
0 resetVect CODE >35:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
1 resetVect CODE >36:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
E code CODE >57:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
10 code CODE >58:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
11 code CODE >59:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
12 code CODE >60:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
14 code CODE >61:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
15 code CODE >63:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
17 code CODE >64:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
18 code CODE >65:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
19 code CODE >67:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
1B code CODE >68:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
1C code CODE >69:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
1D code CODE >71:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
1F code CODE >72:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
20 code CODE >73:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
21 code CODE >75:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
23 code CODE >76:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
24 code CODE >77:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
25 code CODE >79:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
27 code CODE >80:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
28 code CODE >81:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
29 code CODE >82:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
2B code CODE >83:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
2C code CODE >84:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
2D code CODE >85:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
2F code CODE >86:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
30 code CODE >87:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
31 code CODE >88:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
32 code CODE >91:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
33 code CODE >92:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
34 code CODE >93:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
35 code CODE >94:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
37 code CODE >95:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
38 code CODE >96:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
39 code CODE >97:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
3B code CODE >98:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
3C code CODE >99:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
3D code CODE >100:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
3E code CODE >101:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
3F code CODE >102:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
40 code CODE >103:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
42 code CODE >105:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
43 code CODE >106:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
44 code CODE >107:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
45 code CODE >108:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
46 code CODE >109:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
47 code CODE >111:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
48 code CODE >112:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
49 code CODE >113:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
4A code CODE >114:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
4B code CODE >115:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
4C code CODE >117:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
4D code CODE >118:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
4E code CODE >119:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
4F code CODE >120:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
50 code CODE >121:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
51 code CODE >123:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
52 code CODE >124:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
53 code CODE >125:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
54 code CODE >126:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
55 code CODE >128:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
56 code CODE >129:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
58 code CODE >130:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
59 code CODE >131:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
5B code CODE >132:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
5C code CODE >134:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
5E code CODE >135:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
5F code CODE >136:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
60 code CODE >137:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
61 code CODE >138:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
62 code CODE >140:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
63 code CODE >141:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
64 code CODE >142:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
65 code CODE >144:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
66 code CODE >145:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
67 code CODE >146:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
68 code CODE >148:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
69 code CODE >149:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
6A code CODE >153:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
6B code CODE >155:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
72 code CODE >156:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
79 code CODE >157:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
80 code CODE >158:/home/marek/Dropbox/Programowanie/Michrochip_PIC/PIC16/PIC16C84A_ASM.X/main.asm
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Hspace_0 87 0 ABS 0 - -
__Hspace_1 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Hspace_4 4010 0 ABS 0 - -
__Hudata_bank0 1C 0 ABS 0 udata_bank0 -
__Hudata_bank1 1C 0 ABS 0 udata_bank1 -
__Hudata_bank2 1C 0 ABS 0 udata_bank2 -
__Hudata_bank3 1C 0 ABS 0 udata_bank3 -
__L__absolute__ 0 0 ABS 0 __absolute__ -
__LinterruptVect 8 0 CODE 0 interruptVect -
__Hedata 1C 0 ABS 0 edata -
__Hudata 1C 0 ABS 0 udata -
__Hconfig 4012 0 CONFIG 4 config -
__Ledata 1C 0 ABS 0 edata -
__Ludata 1C 0 ABS 0 udata -
__HinterruptVect 1C 0 CODE 0 interruptVect -
__Hcode 1C 0 ABS 0 code -
__Hdata 1C 0 ABS 0 data -
__Lcode 1C 0 ABS 0 code -
__Ldata 1C 0 ABS 0 data -
__S0 87 0 ABS 0 - -
__S1 0 0 ABS 0 - -
__S3 0 0 ABS 0 - -
__Lconfig 0 0 CONFIG 4 config -
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__HresetVect 4 0 CODE 0 resetVect -
__Ludata_bank0 1C 0 ABS 0 udata_bank0 -
__Ludata_bank1 1C 0 ABS 0 udata_bank1 -
__Ludata_bank2 1C 0 ABS 0 udata_bank2 -
__Ludata_bank3 1C 0 ABS 0 udata_bank3 -
__H__absolute__ 0 0 ABS 0 __absolute__ -
__LresetVect 0 0 CODE 0 resetVect -
__Hudata_shr 1C 0 ABS 0 udata_shr -
__Ludata_shr 1C 0 ABS 0 udata_shr -
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
interruptVect 0 4 8 83 2
resetVect 0 0 0 2 2
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
